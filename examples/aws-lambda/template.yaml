AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Description: Infrastructure for deploying the reference receiver to AWS

Parameters:
  CodeSigningConfigArn:
    Type: String
    Default: none
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  PermissionsBoundary:
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Type: String
    Default: none
  Environment:
    Description: The environment type
    Type: String
    AllowedValues:
      - dev
      - build
      - staging
    ConstraintDescription: Must be dev, build, staging
  TestRoleArn:
    Type: String
    Description: The ARN of the role that will used for integration tests
    Default: none
    AllowedPattern: (none)|(arn:aws:iam::.*:role/.*)
  VpcStackName:
    Type: String
    Description: The name of the stack containing the VPC
    Default: none

Mappings:
  EnvironmentConfiguration:
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables

Conditions:
  UseCodeSigning: !Not [!Equals [!Ref CodeSigningConfigArn, none]]

Globals:
  Function:
    CodeSigningConfigArn:
      !If [UseCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
    Architectures:
      - arm64
    Runtime: nodejs22.x
    Timeout: 30
    MemorySize: 256
    Layers:
      - !Sub
        - '{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}'
        - SecretArn:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              dynatraceSecretArn
            ]
    VpcConfig:
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId
      SubnetIds:
        - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
        - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
        - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC

Resources:
  HelloFunction:
    #checkov:skip=CKV_AWS_115:Not setting concurrent execution limits
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/examples/aws-lambda/src/lambda/hello
      FunctionName: !Sub ${AWS::StackName}-hello
      Handler: handler.handler
